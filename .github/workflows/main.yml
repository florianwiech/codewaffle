name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn check:types
      - run: yarn lint:ci

  test:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn test

  build-web:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v3
        with:
          name: build-web
          path: build
          retention-days: 5

  build-native:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn package
      - uses: actions/upload-artifact@v3
        with:
          name: build-native
          path: |
            .webpack
            out
          retention-days: 5

  # https://playwright.dev/docs/ci#github-actions
  e2e-web:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [build-web]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - uses: actions/download-artifact@v3
        with:
          name: build-web
          path: build
      - run: yarn install --frozen-lockfile
      - run: npx playwright install --with-deps
      - run: yarn e2e:web
      - uses: actions/upload-artifact@v3
        with:
          name: e2e-web-report
          path: playwright-report
          retention-days: 5

  e2e-native:
    timeout-minutes: 60
    runs-on: macos-latest
    needs: [build-native]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - uses: actions/download-artifact@v3
        with:
          name: build-native
          path: ./
      - run: yarn install --frozen-lockfile
      - run: npx playwright install --with-deps
      - run: yarn e2e:native
      - uses: actions/upload-artifact@v3
        with:
          name: e2e-native-report
          path: playwright-report
          retention-days: 5

  deploy-web:
    timeout-minutes: 60
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint, test, build-web, e2e-web]
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build-web
          path: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/deploy-codewaffle

      - run: sh ./deploy.sh

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint, test, build-native, e2e-native]
    outputs:
      version: ${{ steps.semantic-release.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: npx semantic-release
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: <>
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: <>

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.release.outputs.version != null
    needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        # Build for supported platforms
        # https://github.com/electron/electron-packager/blob/ebcbd439ff3e0f6f92fa880ff28a8670a9bcf2ab/src/targets.js#L9
        # 32-bit Linux unsupported as of 2019: https://www.electronjs.org/blog/linux-32bit-support
        os:
          - macOS-latest
          - ubuntu-latest
        #          exclude windows for now (I don't have a certificate yet)
        #          - windows-latest
        arch:
          - x64
          - arm64
        include:
          #          - os: windows-latest
          #            arch: ia32
          - os: ubuntu-latest
            arch: armv7l
    steps:
      - uses: actions/checkout@v3
      - name: Adapt new release version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "<>"
          yarn version --new-version ${{ needs.release.outputs.version }}
      - name: Set macOS signing certs
        if: matrix.os == 'macos-latest'
        run: chmod +x tools/add-macos-cert.sh && ./tools/add-macos-cert.sh
        env:
          MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install --frozen-lockfile
      - run: yarn run make --arch=${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      - name: upload artifacts
        # https://github.com/softprops/action-gh-release/issues/203#issuecomment-1029848473
        # instead of creating a release we use this action to just upload the assets to the current release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.release.outputs.version }}
          files: |
            out/**/*.deb
            out/**/*.dmg
            out/**/*setup*.exe
            out/**/*.nupkg
            out/**/*.rpm
            out/**/*.zip
            out/**/RELEASES
